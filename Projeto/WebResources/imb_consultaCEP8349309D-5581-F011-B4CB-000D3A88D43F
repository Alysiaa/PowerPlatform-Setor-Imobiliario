function preencherEnderecoPorCep(executionContext) {
    var formContext = executionContext.getFormContext();

    // Recupera valor do campo CEP
    var cep = formContext.getAttribute("imb_cep").getValue();

    // 游댳 Se o campo foi limpo, limpar tamb칠m os demais
    if (!cep) {
        limparCamposEndereco(formContext);
        // Remover obrigatoriedade do campo N칰mero
        formContext.getAttribute("imb_numero").setRequiredLevel("none");
        return;
    }

    // Remove caracteres que n칚o s칚o n칰meros
    cep = cep.replace(/\D/g, "");

    if (cep.length === 8) {
        var url = "https://viacep.com.br/ws/" + cep + "/json/";

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (!data.erro) {
                    // 游댳 Formatar o CEP no padr칚o 00000-000
                    var cepFormatado = cep.substring(0, 5) + "-" + cep.substring(5);
                    formContext.getAttribute("imb_cep").setValue(cepFormatado);

                    // Preenche campos de texto
                    formContext.getAttribute("imb_rua").setValue(data.logradouro);
                    formContext.getAttribute("imb_bairro").setValue(data.bairro);
                    formContext.getAttribute("imb_cidade").setValue(data.localidade);

                    // 游댳 Mapa de sigla -> nome do estado
                    var estadosMap = {
                        "AC": "Acre", "AL": "Alagoas", "AP": "Amap치", "AM": "Amazonas",
                        "BA": "Bahia", "CE": "Cear치", "DF": "Distrito Federal", "ES": "Esp칤rito Santo",
                        "GO": "Goi치s", "MA": "Maranh칚o", "MT": "Mato Grosso", "MS": "Mato Grosso do Sul",
                        "MG": "Minas Gerais", "PA": "Par치", "PB": "Para칤ba", "PR": "Paran치",
                        "PE": "Pernambuco", "PI": "Piau칤", "RJ": "Rio de Janeiro", "RN": "Rio Grande do Norte",
                        "RS": "Rio Grande do Sul", "RO": "Rond칪nia", "RR": "Roraima", "SC": "Santa Catarina",
                        "SP": "S칚o Paulo", "SE": "Sergipe", "TO": "Tocantins"
                    };

                    var estadoSigla = data.uf; // ex: "SP"
                    var estadoNome = estadosMap[estadoSigla]; // ex: "S칚o Paulo"

                    // Procurar no OptionSet pelo nome
                    var estadoOptions = formContext.getAttribute("imb_estado").getOptions();
                    var estadoValue = null;

                    estadoOptions.forEach(function(option) {
                        if (option.text.toUpperCase() === estadoNome.toUpperCase()) {
                            estadoValue = option.value;
                        }
                    });

                    if (estadoValue !== null) {
                        formContext.getAttribute("imb_estado").setValue(estadoValue);
                    } else {
                        console.log("Estado n칚o encontrado no OptionSet: " + estadoNome);
                    }

                    // 游댳 Agora sim: se o CEP foi preenchido com sucesso, tornar N칰mero obrigat칩rio
                    formContext.getAttribute("imb_numero").setRequiredLevel("required");

                } else {
                    alert("CEP n칚o encontrado.");
                    limparCamposEndereco(formContext);
                    formContext.getAttribute("imb_numero").setRequiredLevel("none");
                }
            })
            .catch(error => {
                console.log("Erro ao consultar ViaCEP: " + error.message);
                formContext.getAttribute("imb_numero").setRequiredLevel("none");
            });
    } else {
        alert("CEP inv치lido. Informe 8 d칤gitos.");
        limparCamposEndereco(formContext);
        formContext.getAttribute("imb_numero").setRequiredLevel("none");
    }
}

// 游댳 Fun칞칚o auxiliar para limpar os campos quando o CEP 칠 inv치lido ou apagado
function limparCamposEndereco(formContext) {
    formContext.getAttribute("imb_rua").setValue(null);
    formContext.getAttribute("imb_bairro").setValue(null);
    formContext.getAttribute("imb_cidade").setValue(null);
    formContext.getAttribute("imb_estado").setValue(null);
}
